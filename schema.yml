openapi: 3.0.3
info:
  title: Plataforma de Alerta Colaborativo
  version: 1.0.0
  description: Plataforma de Alerta Colaborativo
paths:
  /accounts/me/:
    get:
      operationId: user_profile_simple
      description: Retorna informações do usuário e perfil
      summary: Obter dados do usuário
      tags:
      - Perfil
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Dados obtidos com sucesso
        '401':
          description: Não autenticado
    put:
      operationId: user_profile_simple_3
      description: Retorna informações do usuário e perfil
      summary: Obter dados do usuário
      tags:
      - Perfil
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Dados obtidos com sucesso
        '401':
          description: Não autenticado
    patch:
      operationId: user_profile_simple_2
      description: Retorna informações do usuário e perfil
      summary: Obter dados do usuário
      tags:
      - Perfil
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Dados obtidos com sucesso
        '401':
          description: Não autenticado
  /accounts/me/profile/:
    get:
      operationId: profile_update_simple_2
      description: Atualiza informações do perfil
      summary: Atualizar perfil
      tags:
      - Perfil
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Perfil atualizado com sucesso
        '400':
          description: Dados inválidos
        '401':
          description: Não autenticado
    put:
      operationId: profile_update_simple_4
      description: Atualiza informações do perfil
      summary: Atualizar perfil
      tags:
      - Perfil
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Perfil atualizado com sucesso
        '400':
          description: Dados inválidos
        '401':
          description: Não autenticado
    patch:
      operationId: profile_update_simple_3
      description: Atualiza informações do perfil
      summary: Atualizar perfil
      tags:
      - Perfil
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Perfil atualizado com sucesso
        '400':
          description: Dados inválidos
        '401':
          description: Não autenticado
    delete:
      operationId: profile_update_simple
      description: Atualiza informações do perfil
      summary: Atualizar perfil
      tags:
      - Perfil
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Perfil atualizado com sucesso
        '400':
          description: Dados inválidos
        '401':
          description: Não autenticado
  /accounts/neighborhoods/:
    get:
      operationId: neighborhoods_simple
      description: Lista bairros de Florianópolis
      summary: Listar bairros
      tags:
      - Validação
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: Lista de bairros obtida com sucesso
  /accounts/profiles/:
    get:
      operationId: profiles_list_simple
      description: Lista contribuintes com filtros e paginação
      summary: Listar contribuintes
      parameters:
      - in: query
        name: ativo
        schema:
          type: boolean
        description: Filtrar por status ativo
      - in: query
        name: bairro
        schema:
          type: string
        description: Filtrar por bairro
      - in: query
        name: page
        schema:
          type: integer
        description: Número da página
      - in: query
        name: page_size
        schema:
          type: integer
        description: Itens por página
      - in: query
        name: search
        schema:
          type: string
        description: Buscar por nome ou CPF
      tags:
      - Administração
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Lista obtida com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão
  /accounts/profiles/inactive/:
    get:
      operationId: profiles_list_simple_2
      description: Lista contribuintes com filtros e paginação
      summary: Listar contribuintes
      parameters:
      - in: query
        name: ativo
        schema:
          type: boolean
        description: Filtrar por status ativo
      - in: query
        name: bairro
        schema:
          type: string
        description: Filtrar por bairro
      - in: query
        name: page
        schema:
          type: integer
        description: Número da página
      - in: query
        name: page_size
        schema:
          type: integer
        description: Itens por página
      - in: query
        name: search
        schema:
          type: string
        description: Buscar por nome ou CPF
      tags:
      - Administração
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Lista obtida com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão
    patch:
      operationId: profiles_list_simple_3
      description: Lista contribuintes com filtros e paginação
      summary: Listar contribuintes
      parameters:
      - in: query
        name: ativo
        schema:
          type: boolean
        description: Filtrar por status ativo
      - in: query
        name: bairro
        schema:
          type: string
        description: Filtrar por bairro
      - in: query
        name: page
        schema:
          type: integer
        description: Número da página
      - in: query
        name: page_size
        schema:
          type: integer
        description: Itens por página
      - in: query
        name: search
        schema:
          type: string
        description: Buscar por nome ou CPF
      tags:
      - Administração
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileListRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Lista obtida com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão
  /accounts/register/:
    get:
      operationId: user_availability_simple
      description: Verifica se username e email estão disponíveis
      summary: Verificar disponibilidade
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: Email a verificar
      - in: query
        name: username
        schema:
          type: string
        description: Nome de usuário a verificar
      tags:
      - Autenticação
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: Verificação realizada com sucesso
    post:
      operationId: user_create_simple
      description: Cria um novo usuário com perfil de contribuinte
      summary: Registrar novo usuário
      tags:
      - Autenticação
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          description: Usuário criado com sucesso
        '400':
          description: Dados inválidos
  /accounts/stats/:
    get:
      operationId: stats_simple
      description: Retorna estatísticas de usuários e contribuintes
      summary: Estatísticas do sistema
      tags:
      - Administração
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Estatísticas geradas com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão
  /accounts/validate/cep/:
    get:
      operationId: cep_validation_simple
      description: Valida formato de CEP brasileiro
      summary: Validar CEP
      parameters:
      - in: query
        name: cep
        schema:
          type: string
        description: CEP a ser validado
        required: true
      tags:
      - Validação
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: CEP válido
        '400':
          description: CEP inválido
  /accounts/validate/cpf/:
    get:
      operationId: cpf_validation_simple
      description: Verifica se CPF é válido e disponível
      summary: Validar CPF
      parameters:
      - in: query
        name: cpf
        schema:
          type: string
        description: CPF a ser validado
        required: true
      tags:
      - Validação
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: CPF validado com sucesso
        '400':
          description: CPF inválido
  /accounts/validate/phone/:
    get:
      operationId: phone_validation_simple
      description: Valida formato de telefone brasileiro
      summary: Validar telefone
      parameters:
      - in: query
        name: phone
        schema:
          type: string
        description: Telefone a ser validado
        required: true
      tags:
      - Validação
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: Telefone válido
        '400':
          description: Telefone inválido
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    CustomTokenObtainPairRequest:
      type: object
      description: Serializer customizado para JWT que inclui informações do perfil
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    PatchedProfileListRequest:
      type: object
      description: Serializer simplificado para listagem de perfis
      properties:
        bairro:
          type: string
          description: Bairro de residência em Florianópolis
          maxLength: 100
        ativo:
          type: boolean
          description: Indica se o contribuinte está ativo na plataforma
    PatchedProfileUpdateRequest:
      type: object
      description: Serializer para atualização de perfil (CPF não pode ser alterado)
      properties:
        foto:
          type: string
          format: binary
          nullable: true
          title: Foto de Perfil
          description: Foto do contribuinte
        data_nascimento:
          type: string
          format: date
          title: Data de Nascimento
          description: Data de nascimento do contribuinte (mínimo 16 anos)
        telefone:
          type: string
          description: 'Telefone de contato (formato: (48) 99999-9999)'
          maxLength: 15
        endereco:
          type: string
          title: Endereço
          description: Endereço completo em Florianópolis
        bairro:
          type: string
          description: Bairro de residência em Florianópolis
          maxLength: 100
        cep:
          type: string
          description: 'CEP do endereço (formato: 88000-000)'
          maxLength: 9
    PatchedUserRequest:
      type: object
      description: Serializer para o modelo User com perfil
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    ProfileRequest:
      type: object
      description: Serializer completo para o modelo Profile
      properties:
        cpf:
          type: string
          minLength: 1
          description: Digite apenas os números do CPF
          maxLength: 14
        foto:
          type: string
          format: binary
          nullable: true
          title: Foto de Perfil
          description: Foto do contribuinte
        data_nascimento:
          type: string
          format: date
          title: Data de Nascimento
          description: Data de nascimento do contribuinte (mínimo 16 anos)
        telefone:
          type: string
          description: 'Telefone de contato (formato: (48) 99999-9999)'
          maxLength: 15
        endereco:
          type: string
          title: Endereço
          description: Endereço completo em Florianópolis
        bairro:
          type: string
          description: Bairro de residência em Florianópolis
          maxLength: 100
        cep:
          type: string
          description: 'CEP do endereço (formato: 88000-000)'
          maxLength: 9
        ativo:
          type: boolean
          description: Indica se o contribuinte está ativo na plataforma
      required:
      - cpf
      - data_nascimento
    ProfileUpdateRequest:
      type: object
      description: Serializer para atualização de perfil (CPF não pode ser alterado)
      properties:
        foto:
          type: string
          format: binary
          nullable: true
          title: Foto de Perfil
          description: Foto do contribuinte
        data_nascimento:
          type: string
          format: date
          title: Data de Nascimento
          description: Data de nascimento do contribuinte (mínimo 16 anos)
        telefone:
          type: string
          description: 'Telefone de contato (formato: (48) 99999-9999)'
          maxLength: 15
        endereco:
          type: string
          title: Endereço
          description: Endereço completo em Florianópolis
        bairro:
          type: string
          description: Bairro de residência em Florianópolis
          maxLength: 100
        cep:
          type: string
          description: 'CEP do endereço (formato: 88000-000)'
          maxLength: 9
      required:
      - data_nascimento
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    UserCreateRequest:
      type: object
      description: Serializer para criação de usuário com perfil
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 8
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
        profile:
          $ref: '#/components/schemas/ProfileRequest'
      required:
      - password
      - password_confirm
      - profile
      - username
    UserRequest:
      type: object
      description: Serializer para o modelo User com perfil
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
